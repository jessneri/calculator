{"version":3,"sources":["components/Button/Button.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Button","props","type","onButtonClick","onClick","className","App","useState","value","setValue","memory","setMemory","operator","setOperator","handleButton","parseFloat","toString","length","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8cf853f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = ({ props, type, onButtonClick }) => {\r\n  return <div onClick={onButtonClick(props)} className={`button ${type ||\"\"}`}\r\n  >{props}</div>;\r\n}\r\n\r\nexport default Button;\r\n","/* eslint-disable react/no-direct-mutation-state */\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Button from \"../Button/Button\";\n\n\nconst App = () => {\n  const [value, setValue] = useState(\"0\");\n  const [memory, setMemory] = useState(null);\n  const [operator, setOperator] = useState(null);\n\n\n  const handleButton = (props) => () => {\n\n    //functions\n    if(props === \"Clear\") {\n      setValue(\"0\");\n      setMemory(null);\n      setOperator(null);\n      return;\n    }\n\n    if(props === \"%\") {\n      setValue((parseFloat(value) / 100).toString());\n      return;\n    }\n\n    if(props === \".\") {\n      if(value.includes(\".\")) return\n\n      setValue(value + \".\");\n      return;\n\n    }\n\n    //operators\n    if(props === \"+\"){\n      if(operator !== null){\n        if(operator === \"+\"){\n          setMemory(memory + parseFloat(value));\n        }else if(operator === \"-\"){\n          setMemory(memory - parseFloat(value));\n        }else if(operator === \"*\"){\n          setMemory(memory * parseFloat(value));\n        }else if(operator === \"/\"){\n          setMemory(memory / parseFloat(value));\n        }\n      }else{\n        setMemory(parseFloat(value));\n      }\n      setValue(\"0\");\n      setOperator(\"+\");\n      return;\n    }\n\n    if(props === \"-\"){\n      if(operator !== null){\n        if(operator === \"+\"){\n          setMemory(memory + parseFloat(value));\n        }else if(operator === \"-\"){\n        }else if(operator === \"*\"){\n          setMemory(memory * parseFloat(value));\n        }else if(operator === \"/\"){\n          setMemory(memory / parseFloat(value));\n        }\n      }else{\n        setMemory(parseFloat(value));\n      }\n      \n      setValue(\"0\");\n      setOperator(\"-\");\n      return;\n    }\n\n    if(props === \"*\"){\n      if(operator !== null){\n        if(operator === \"+\"){\n          setMemory(memory + parseFloat(value));\n        }else if(operator === \"-\"){\n        }else if(operator === \"*\"){\n          setMemory(memory * parseFloat(value));\n        }else if(operator === \"/\"){\n          setMemory(memory / parseFloat(value));\n        }\n      }else{\n        setMemory(parseFloat(value));\n      }\n      \n      setValue(\"0\");\n      setOperator(\"*\");\n      return;\n    }\n\n    if(props === \"/\"){\n      if(operator !== null){\n        if(operator === \"+\"){\n          setMemory(memory + parseFloat(value));\n        }else if(operator === \"-\"){\n        }else if(operator === \"*\"){\n          setMemory(memory * parseFloat(value));\n        }else if(operator === \"/\"){\n          setMemory(memory / parseFloat(value));\n        }\n      }else{\n        setMemory(parseFloat(value));\n      }\n      \n      setValue(\"0\");\n      setOperator(\"/\");\n      return;\n    }\n\n    if(props === \"=\"){\n      if(!operator) return;\n\n      if(operator === \"+\"){\n        setValue((memory + parseFloat(value)).toString());\n      }else if(operator === \"-\"){\n        setValue((memory - parseFloat(value)).toString());\n      }else if(operator === \"*\"){\n        setValue((memory * parseFloat(value)).toString());\n      }else if(operator === \"/\"){\n        setValue((memory / parseFloat(value)).toString());\n      }\n       \n      setMemory(null);\n      setOperator(null);\n      return;\n    }\n\n    if(value[value.length - 1] === \".\"){\n      setValue(value + props);\n    }else{\n      setValue(parseFloat(parseFloat(value) + props).toString());\n    }\n  }   \n\n  return (\n    <div className=\"App\">\n      <div className=\"calc-wrapper\">\n        <div className=\"row\">\n          <div className=\"input\">{value}</div>\n        </div>\n        <div className=\"row\">\n          <Button onButtonClick={handleButton} props=\"7\" />\n          <Button onButtonClick={handleButton} props=\"8\" />\n          <Button onButtonClick={handleButton} props=\"9\" />\n          <Button onButtonClick={handleButton} props=\"/\" type=\"operator\"/>\n        </div>\n        <div className=\"row\">\n          <Button onButtonClick={handleButton} props=\"4\" />\n          <Button onButtonClick={handleButton} props=\"5\" />\n          <Button onButtonClick={handleButton} props=\"6\" />\n          <Button onButtonClick={handleButton} props=\"*\" type=\"operator\"/>\n        </div>\n        <div className=\"row\">\n          <Button onButtonClick={handleButton} props=\"1\" />\n          <Button onButtonClick={handleButton} props=\"2\" />\n          <Button onButtonClick={handleButton} props=\"3\" />\n          <Button onButtonClick={handleButton} props=\"+\" type=\"operator\"/>\n        </div>\n        <div className=\"row\">\n          <Button onButtonClick={handleButton} props=\".\" />\n          <Button onButtonClick={handleButton} props=\"0\" />\n          <Button onButtonClick={handleButton} props=\"%\" type=\"operator\"/>\n          <Button onButtonClick={handleButton} props=\"-\" type=\"operator\"/>\n        </div>\n        <div className=\"row\">\n          <Button onButtonClick={handleButton} props=\"Clear\" type=\"function\"/>\n          <Button onButtonClick={handleButton} props=\"=\" type=\"function\"/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}